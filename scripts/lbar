#!/usr/bin/env bash
#
# Configuration for lemonbar
#
# Inspired by dkeg :)

# Get colors and defind spacing
source $HOME/.cache/squash/colors
SEP="  "
SEPS=" "
SPC="%{B$bg}$SEP%{B-}"

# Get glyphs from siji
# Using queries is easier than c/p
glydate=$(echo -e "\ue015")
glyvol=$(echo -e "\ue053")
glyvoloff=$(echo -e "\ue052")
glybatlow=$(echo -e "\ue035")
glybat=$(echo -e "\ue037")
glybatmax=$(echo -e "\ue09e")
glywlanhigh=$(echo -e "\ue048")
glywlanlow=$(echo -e "\ue047")

# Bar contents
content() 
{
    # Get current workspaces
    workspaces()
    {
       cur=$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')
       total=$(xprop -root _NET_NUMBER_OF_DESKTOPS | awk '{print $3}')

       empty=$(echo -e "\ue000")

       seq=""

       for ((i=0; i<$cur; i++)); do seq+="%{B$blk}%{F$fg}${SEPS}$i${SEPS}%{B-}%{F-}"; done
       seq+="%{B$ylw}%{F$blk}${SEPS}$cur${SEPS}%{B-}%{F-}"
       for ((i=$(($cur+1)); i<$total; i++)); do seq+="%{B$blk}%{F$fg}${SEPS}$i${SEPS}%{B-}%{F-}"; done

       echo $seq
    }

    # Clock
    date-time() 
    {
        clock=$(date +'%a %m/%d/%g %I:%M')
        label=$glydate
        echo %{B$ylw}%{F$blk}$SEP$label$SEP%{B-}%{F-}%{B$ylw}%{F$blk}$SEP$clock$SEP%{B-}%{F-}
    }

    # Volume 0-100
    # Glyph will change when volume is muted
    volume() 
    {
        vol=$(amixer get Master|awk 'NR==5 {print $4}'|cut -d '%' -f1 | cut -d '[' -f2)
        
        if [[ $vol -ge "1" ]]; then
            label=$glyvol
        else
            label=$glyvoloff
        fi

        echo %{B$bblk}%{F$fg}$SEP$label$SEP%{B-}%{F-}%{B$blk}$SEP$vol$SEP%{B-}
    }

    # Battery 0-100
    # Battery considered charged at 98%
    # Glyph changes below 20 %
    battery()
    {
        state=$(cat /sys/class/power_supply/BAT0/status)
        cap=$(cat /sys/class/power_supply/BAT0/capacity)

        if [[ cap -ge "98" ]]; then
            label=$glybatmax
        elif [[ cap -ge 20 ]]; then
            label=$glybat
        else
            label=$glybatlow
        fi

        echo %{B$bblk}%{F$fg}$SEP$label$SEP%{B-}%{F-}%{B$blk}$SEP$cap$SEP%{B-}
    }

    # Actice window from X
    windowname()
    {
        title=$(xprop -id $(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5) WM_NAME | awk '{$1=$2="";print}' | tr -d '"' | cut -c 1-80)
        echo %{B$blk}$SEP$title$SEP%{B-}
    }

    # Get SSID using iwgetid
    # If iwgetid is not found, then DISCONNECTED will be displayed
    wireless()
    {
        wifi=$(iwgetid -r)

        if [[ -z $wifi ]]; then
            wifi="DISCONNECTED"
        fi

        label=$glywlanhigh
        echo %{B$bblk}%{F$fg}$SEP$label$SEP%{B-}%{F-}%{B$blk}$SEP$wifi$SEP%{B-}
    }


    # Bar contents left/right
    left=$(workspaces)${SPC}$(windowname)
    center=
    right=$(volume)${SPC}$(battery)${SPC}$(wireless)${SPC}$(date-time)${SCP}

    output=$left%{c}$center%{r}$right
    echo $output
}

content

# Formatting options
fonts="-o 1 -f -kakwa-curie-Medium-R-Normal--12-120-72-72-C-60-ISO10646-1 -o -0.5 -f -wuncon-siji-medium-r-normal--10-100-75-75-c-80-iso10646-1"
width=1920
heigth=20
# x - y offsets
offx=0
offy=0
# Border width
brdr=5
# Border color
brdrc=${bg}
# Bar background color
bbg=${bg}
# Bar foreground color
bfg=${fg}

# Final output formatting
options="-d ${fonts} ${width}x${height}+${xoff}+${yoff} -r ${brdr} -R ${brdrc} -B ${bbg} -F ${bfg}"

# Main loop
while true; do
    echo $(content)
    sleep .5
done | lemonbar ${options}
