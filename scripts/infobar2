#!/usr/bin/env bash

source $HOME/.cache/squash/colors
SEP="  "
SEP2="    "
SEPB="__"
SPC="%{B$bg}%{F$bg}$SEPB%{B-}%{F-}"

# Generate glyphs for Siji using echos
# Seems more consistent to me than copy/pasting
# the characters themselves
glycur=$(echo -e "\ue000")
glyem=$(echo -e "\ue001")
glydate=$(echo -e "\ue015")
glyvol=$(echo -e "\ue050")
glyvoloff=$(echo -e "\ue052")
glybatlow=$(echo -e "\ue035")
glybat=$(echo -e "\ue037")
glybatmax=$(echo -e "\ue09e")
glywlanhigh=$(echo -e "\ue048")
glywlanlow=$(echo -e "\ue047")

# Status colors w/ formatting
PANIC="%{F$MAG}%{B$BBLK}${SEP}"
ALERT="%{F$RED}%{B$BBLK}${SEP}"
WARN="%{F$YLW}%{B$BBLK}${SEP}"
GOOD="%{F$GRN}%{B$BBLK}${SEP}"
PLAIN="%{F$WHT}%{B$BBLK}${SEP}"
GEN="%{F$FG}%{B$BBLK}${SEP}"
BLACK="%{F$FG}%{B$BLK}${SEP}"
CLR="${SEP}%{B-}${F-}"

if [ ! -z ${LMNBAR_DARK} ]; then
    PANIC="%{F$MAG}%{B$LMNBAR_DARK}${SEP}"
    ALERT="%{F$RED}%{B$LMNBAR_DARK}${SEP}"
    WARN="%{F$YLW}%{B$LMNBAR_DARK}${SEP}"
    GOOD="%{F$GRN}%{B$LMNBAR_DARK}${SEP}"
    PLAIN="%{F$WHT}%{B$LMNBAR_DARK}${SEP}"
    GEN="%{F$FG}%{B$LMNBAR_DARK}${SEP}"
    BLACK="%{F$FG}%{B$LMNBAR_DARKER}${SEP}"
fi

# Bar contents
content() {
    # Get current workspaces
    workspaces() {
        cur=$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')
        total=5

        empty=$(echo -e "\ue000")

        seq=""

        for ((i=0; i<$cur && i<$(($total-1)); i++)); do 
            seq+="${fg}${glyem}${clr}"
        done

        seq+="${ylw}${glycur}${clr}"

        for ((i=$(($cur+1)); i<$total; i++)); do
            seq+="${fg}${glyem}${clr}"
        done

        echo "$seq"
    }

    # Clock
    date-time() {
        clock="$(date +'%a %d %I:%M')"
        echo "${GEN}${glydate}${SEP}${BLACK}${clock}${CLR}"
    }

    # Volume 0-100
    # Glyph will change when volume is muted
    volume() {
        vol="$(amixer get Master|awk 'NR==5 {print $4}'|cut -d '%' -f1 | cut -d '[' -f2)"
        mut="$(amixer get Master| awk 'NR==5 {print $6}')"

        if [[ ${mut} = "[off]" ]]; then
            echo "${ALERT}${glyvol}${SEP}${BLACK}${vol}${CLR}"
        elif [[ ${vol} = 0 ]]; then
            echo "${WARN}${glyvol}${SEP}${BLACK}${vol}${CLR}"
        else
            echo "${GOOD}${glyvol}${SEP}${BLACK}${vol}${CLR}"
        fi
    }

    # Battery 0-100
    # Battery considered charged at 98%
    # Glyph changes below 20 %
    battery() {
        cap="$(cat /sys/class/power_supply/BAT0/capacity)"
        stat="$(cat /sys/class/power_supply/BAT0/status)"

        if [[ ${cap} -ge 98 || ${stat} = "Charging" ]]; then
            echo "${GOOD}${glybatmax}${SEP}${BLACK}${cap}${CLR}"
        elif [[ ${cap} -ge 50 ]]; then
            echo "${WARN}${glybat}${SEP}${BLACK}${cap}${CLR}"
        else 
            echo "${ALERT}${glybatlow}${SEP}${BLACK}${cap}${CLR}"
        fi
    }

    # Get SSID using iwgetid
    # If iwgetid is not found, then DISCONNECTED will be displayed
    wireless() {
        wifi=$(iwgetid -r)

        if [[ -z $wifi ]]; then
            wifi="DISCONNECTED"
            echo "${ALERT}${glywlanlow}${SEP}${BLACK}${wifi}${CLR}"
        else
            echo "${GOOD}${glywlanhigh}${SEP}${BLACK}${wifi}${CLR}"
        fi
    }

    # Bar contents left/right
    left=""
    center=
    #right="$(volume)${SPC}$(battery)${SPC}$(wireless)${SPC}$(date-time)${SCP}"
    right="$(wireless)"${SEP2}"$(battery)"$SEP2"$(volume)"$SEP2"$(date-time)"

    output="$left%{c}$center%{r}$right"
    echo -n "$output"
}

content

# Formatting options
fonts="-f -uw-ttyp0-medium-r-normal-*-14-*-*-*-*-*-*-* -f -*-siji-*"
width=1910
height=20
# x - y offsets
xoff=0
yoff=5
# Border width
# Only works with patched lemonbar:w
brdr=5
# Border color
brdrc=${bg}
# Bar background color
#bbg=${wht}
bbg=#00000000
#Bar foreground color
bfg=${fg}

# Final output formatting
#options="-d ${fonts} -g ${width}x${height}+${xoff}+${yoff} -B ${bbg} -F ${bfg} -b -r ${brdr}" 
options="-d ${fonts} -g ${width}x${height}+${xoff}+${yoff} -B ${bbg} -F ${bfg} -r 5" 

# Main loop
while true; do
    echo $(content)
    sleep .5
done | lemonbar ${options}
